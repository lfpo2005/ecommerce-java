public CompanyWithDetailsDTO getByIdWithAddressesAndPhones(UUID companyId) {
        String sql = "..."; // Sua consulta SQL

        return jdbcTemplate.query(sql, new Object[]{companyId}, rs -> {
        CompanyModel company = null;
        Set<UUID> processedPhones = new HashSet<>();
    Set<UUID> processedAddresses = new HashSet<>();

        while (rs.next()) {
        if (company == null) {
        company = new CompanyModel();
        // Preenche os dados de CompanyModel a partir do ResultSet
        company.setCompanyId(UUID.fromString(rs.getString("company_id")));
        company.setCnpj(rs.getString("cnpj"));
        // ... outros campos de CompanyModel ...
        company.setPhones(new HashSet<>());
            company.setAddress(new HashSet<>());
                }

                // Lógica para adicionar telefones e endereços ao CompanyModel
                // ...

                }
                // Depois de preencher o CompanyModel, converte-o para CompanyWithDetailsDTO
                return company.convertToCompanyEventDto();
                });
                }
